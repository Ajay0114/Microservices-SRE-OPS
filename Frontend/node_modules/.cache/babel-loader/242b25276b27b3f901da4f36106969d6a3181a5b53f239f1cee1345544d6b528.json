{"ast":null,"code":"var _jsxFileName = \"/home/AWS/Microservices-SRE-OPS/Frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    axios.get('/orders') // This should proxy to your backend\n    .then(response => setOrders(response.data)).catch(err => console.error(err));\n  }, []);\n\n  // Transform data for chart\n  const chartData = orders.map(order => ({\n    orderId: order.orderId,\n    amount: order.amount,\n    status: order.status\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 30\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order Analytics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 800,\n      height: 400,\n      data: chartData,\n      margin: {\n        top: 20,\n        right: 50,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"orderId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"amount\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","App","_s","orders","setOrders","get","then","response","data","catch","err","console","error","chartData","map","order","orderId","amount","status","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","activeDot","r","_c","$RefreshReg$"],"sources":["/home/AWS/Microservices-SRE-OPS/Frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nfunction App() {\n    const [orders, setOrders] = useState([]);\n\n    useEffect(() => {\n        axios.get('/orders')  // This should proxy to your backend\n            .then(response => setOrders(response.data))\n            .catch(err => console.error(err));\n    }, []);\n\n    // Transform data for chart\n    const chartData = orders.map(order => ({\n        orderId: order.orderId,\n        amount: order.amount,\n        status: order.status\n    }));\n\n    return (\n        <div style={{ padding: 30 }}>\n            <h1>Order Analytics Dashboard</h1>\n            <LineChart\n                width={800}\n                height={400}\n                data={chartData}\n                margin={{ top: 20, right: 50, left: 20, bottom: 5 }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"orderId\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n            </LineChart>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZE,KAAK,CAACc,GAAG,CAAC,SAAS,CAAC,CAAE;IAAA,CACjBC,IAAI,CAACC,QAAQ,IAAIH,SAAS,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC1CC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,SAAS,GAAGV,MAAM,CAACW,GAAG,CAACC,KAAK,KAAK;IACnCC,OAAO,EAAED,KAAK,CAACC,OAAO;IACtBC,MAAM,EAAEF,KAAK,CAACE,MAAM;IACpBC,MAAM,EAAEH,KAAK,CAACG;EAClB,CAAC,CAAC,CAAC;EAEH,oBACIlB,OAAA;IAAKmB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBACxBrB,OAAA;MAAAqB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCzB,OAAA,CAACR,SAAS;MACNkC,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE,GAAI;MACZnB,IAAI,EAAEK,SAAU;MAChBe,MAAM,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAE;MAAAX,QAAA,gBAEpDrB,OAAA,CAACJ,aAAa;QAACqC,eAAe,EAAC;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCzB,OAAA,CAACN,KAAK;QAACwC,OAAO,EAAC;MAAS;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3BzB,OAAA,CAACL,KAAK;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTzB,OAAA,CAACH,OAAO;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXzB,OAAA,CAACF,MAAM;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVzB,OAAA,CAACP,IAAI;QAAC0C,IAAI,EAAC,UAAU;QAACD,OAAO,EAAC,QAAQ;QAACE,MAAM,EAAC,SAAS;QAACC,SAAS,EAAE;UAAEC,CAAC,EAAE;QAAE;MAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd;AAACvB,EAAA,CAlCQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}